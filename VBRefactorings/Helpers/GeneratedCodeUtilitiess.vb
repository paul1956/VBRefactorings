' Licensed to the .NET Foundation under one or more agreements.
' The .NET Foundation licenses this file to you under the MIT license.
' See the LICENSE file in the project root for more information.

Imports System.Threading
Imports Microsoft.CodeAnalysis

Namespace Roslyn.Utilities
    Friend Module GeneratedCodeUtilities
        Private ReadOnly s_autoGeneratedStrings() As String = {"<autogenerated", "<auto-generated"}

        Friend Function IsGeneratedCode(tree As SyntaxTree, isComment As Func(Of SyntaxTrivia, Boolean), CancelToken As CancellationToken) As Boolean
            Return IsGeneratedCodeFile(tree.FilePath) OrElse BeginsWithAutoGeneratedComment(tree, isComment, CancelToken)
        End Function

        Private Function IsGeneratedCodeFile(filePath As String) As Boolean
            If Not String.IsNullOrEmpty(filePath) Then
                Dim fileName As String = IO.Path.GetFileName(filePath)
                If fileName.StartsWith("TemporaryGeneratedFile_", StringComparison.OrdinalIgnoreCase) Then
                    Return True
                End If

                Dim extension As String = IO.Path.GetExtension(filePath)
                If Not String.IsNullOrEmpty(extension) Then
                    Dim fileNameWithoutExtension As String = IO.Path.GetFileNameWithoutExtension(filePath)
                    If fileNameWithoutExtension.EndsWith(".designer", StringComparison.OrdinalIgnoreCase) OrElse fileNameWithoutExtension.EndsWith(".generated", StringComparison.OrdinalIgnoreCase) OrElse fileNameWithoutExtension.EndsWith(".g", StringComparison.OrdinalIgnoreCase) OrElse fileNameWithoutExtension.EndsWith(".g.i", StringComparison.OrdinalIgnoreCase) Then
                        Return True
                    End If
                End If
            End If

            Return False
        End Function

        Private Function BeginsWithAutoGeneratedComment(tree As SyntaxTree, isComment As Func(Of SyntaxTrivia, Boolean), CancelToken As CancellationToken) As Boolean
            Dim root As SyntaxNode = tree.GetRoot(CancelToken)
            If root.HasLeadingTrivia Then
                Dim leadingTrivia As SyntaxTriviaList = root.GetLeadingTrivia()

                For Each trivia As SyntaxTrivia In leadingTrivia
                    If Not isComment(trivia) Then
                        Continue For
                    End If

                    Dim text As String = trivia.ToString

                    ' Check to see if the text of the comment contains an auto generated comment.
                    For Each autoGenerated As String In s_autoGeneratedStrings
                        If text.Contains(autoGenerated) Then
                            Return True
                        End If
                    Next autoGenerated
                Next trivia
            End If

            Return False
        End Function
    End Module
End Namespace
